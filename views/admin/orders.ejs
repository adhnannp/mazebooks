<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Corona Admin</title>
    <!-- plugins:css -->
    <link rel="stylesheet" href="https://unpkg.com/cropperjs/dist/cropper.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" href="/static/admin/vendors/mdi/css/materialdesignicons.min.css">
    <link rel="stylesheet" href="/static/admin/vendors/css/vendor.bundle.base.css">
    <!-- endinject -->

    <!-- Plugin css for this page -->
    <link rel="stylesheet" href="/static/admin/vendors/jvectormap/jquery-jvectormap.css">
    <link rel="stylesheet" href="/static/admin/vendors/flag-icon-css/css/flag-icon.min.css">
    <link rel="stylesheet" href="/static/admin/vendors/owl-carousel-2/owl.carousel.min.css">
    <link rel="stylesheet" href="/static/admin/vendors/owl-carousel-2/owl.theme.default.min.css">
    <!-- End plugin css for this page -->
    <!-- inject:css -->
    <!-- endinject -->
    <!-- Layout styles -->
    <link rel="stylesheet" href="/static/admin/css/style.css">
    <!-- End layout styles -->
    <link rel="shortcut icon" href="/static/admin/images/favicon.png" />
  </head>
  <body>
    <div class="container-scroller">
      <!-- partial:partials/_sidebar.html -->
      <nav class="sidebar sidebar-offcanvas" id="sidebar">
        <div class="sidebar-brand-wrapper d-none d-lg-flex align-items-center justify-content-center fixed-top">
          <a class="sidebar-brand brand-logo" href="/admin/home" style="text-decoration: none;"><span style="color: white;">MAZE BOOKS</span></a>
          <a class="sidebar-brand brand-logo-mini" href="/admin/home" style="text-decoration: none;"><span style="color: white;">M</span></a>
        </div>
        <ul class="nav">
          <li class="nav-item profile">
            <div class="profile-desc">
              <div class="profile-pic">
                <% if (admin) { %>
                  <div class="profile-name">
                    <h5 class="mb-0 font-weight-normal"><span class="text-success">&#9673; </span><%= admin.LastName+' '+admin.FirstName %> </h5>
                  </div>
                <% } %>
              </div>
            </div>
          </li>
          <li class="nav-item nav-category">
            <span class="nav-link">Navigation</span>
          </li>
          <li class="nav-item menu-items">
            <a class="nav-link" href="/admin/home">
              <span class="menu-icon">
                <i class="mdi mdi-speedometer"></i>
              </span>
              <span class="menu-title">Dashboard</span>
            </a>
          </li>
          <li class="nav-item menu-items">
            <a class="nav-link" href="/admin/users">
              <span class="menu-icon">
                <i class="mdi mdi-laptop"></i>
              </span>
              <span class="menu-title">Users</span>
            </a>
          </li>
          <li class="nav-item menu-items">
            <a class="nav-link" href="/admin/products">
              <span class="menu-icon">
                <i class="mdi mdi-playlist-play"></i>
              </span>
              <span class="menu-title">Products</span>
            </a>
          </li>
          <li class="nav-item menu-items">
            <a class="nav-link" href="/admin/categories">
              <span class="menu-icon">
                <i class="mdi mdi-table-large"></i>
              </span>
              <span class="menu-title">Category</span>
            </a>
          </li>
          <li class="nav-item menu-items">
            <a class="nav-link" href="/admin/orders">
              <span class="menu-icon">
                <i class="mdi mdi-chart-bar"></i>
              </span>
              <span class="menu-title">Orders</span>
            </a>
          </li>
          <li class="nav-item menu-items">
            <a class="nav-link" href="/admin/offers">
              <span class="menu-icon">
                <i class="mdi mdi-contacts"></i>
              </span>
              <span class="menu-title">Offers</span>
            </a>
          </li>
          <li class="nav-item menu-items">
            <a class="nav-link" href="/admin/coupons">
              <span class="menu-icon">
                <i class="mdi mdi-security"></i>
              </span>
              <span class="menu-title">Coupons</span>
            </a>
          </li>
        </ul>
      </nav>
      <!-- partial -->
      <div class="container-fluid page-body-wrapper">
        <!-- partial:partials/_navbar.html -->
        <nav class="navbar p-0 fixed-top d-flex flex-row">
          <div class="navbar-brand-wrapper d-flex d-lg-none align-items-center justify-content-center">
            <a class="navbar-brand brand-logo-mini" href="index.html"><img src="/static/admin/images/logo-mini.svg" alt="logo" /></a>
          </div>
          <div class="navbar-menu-wrapper flex-grow d-flex align-items-stretch">
            <button class="navbar-toggler navbar-toggler align-self-center" type="button" data-toggle="minimize">
              <span class="mdi mdi-menu"></span>
            </button>
            <ul class="navbar-nav w-100 d-flex justify-content-between">
              <!-- Logout Button on the Left -->
              <li class="nav-item">
                <a href="/admin/home#salesReportSection" class="btn btn-primary">Generate Sales Report</a>
              </li>
            
              <!-- Generate Sales Report Button on the Right -->
              <li class="nav-item">
                <form action="/admin/logout" method="post" style="margin: 0;">
                  <button type="submit" class="btn btn-danger">Logout</button>
                </form>
              </li>
            </ul>
            <button class="navbar-toggler navbar-toggler-right d-lg-none align-self-center" type="button" data-toggle="offcanvas">
              <span class="mdi mdi-format-line-spacing"></span>
            </button>
          </div>
        </nav>
        <!-- partial -->
        <div class="main-panel">
          <div class="content-wrapper">
            <div class="row">
              <div class="col-12 grid-margin stretch-card">
                <div class="card corona-gradient-card">
                  <div class="card-body py-0 px-0 px-sm-3">
                    <div class="row align-items-center">
                      <div class="col-4 col-sm-3 col-xl-2">
                        <img src="/static/admin/images/dashboard/Group126@2x.png" class="gradient-corona-img img-fluid" alt="">
                      </div>
                      <div class="col-5 col-sm-7 col-xl-8 p-0">
                        <h4 class="mb-1 mb-sm-0">MANAGE ORDERS</h4>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>  
          <div class="row">
            <div class="col-lg-12 grid-margin stretch-card">
              <div class="card">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h4 class="card-title">Orders</h4>
                        <div class="d-flex justify-content-center align-items-center">
                          <form action="/admin/orders" method="GET" class="form-inline mx-3">
                            <select class="form-control mr-sm-2" name="filter" aria-label="Filter by status">
                                <option value="">Filter by Status</option>
                                <option value="New" <%= filterOption === "New" ? "selected" : "" %>>New Orders</option>
                                <option value="Pending" <%= filterOption === "Pending" ? "selected" : "" %>>Pending</option>
                                <option value="Shipped" <%= filterOption === "Shipped" ? "selected" : "" %>>Shipped</option>
                                <option value="Delivered" <%= filterOption === "Delivered" ? "selected" : "" %>>Out for Delivery</option>
                                <option value="Placed" <%= filterOption === "Placed" ? "selected" : "" %>>Delivered</option>
                                <option value="Returned" <%= filterOption === "Returned" ? "selected" : "" %>>Returned</option>
                                <option value="Cancelled" <%= filterOption === "Cancelled" ? "selected" : "" %>>Cancelled</option>
                                <option value="Requested" <%= filterOption === "Requested" ? "selected" : "" %>>Return Requests</option>
                                <option value="Rejected" <%= filterOption === "Rejected" ? "selected" : "" %>>Return Rejected</option>
                            </select>
                            <!-- Hidden field to retain filter option -->
                            <input type="hidden" name="page" value="<%= currentPage %>">
                            <button class="btn btn-primary" type="submit">Filter</button>
                        </form>
                        </div>
                    </div>                                            
                
                    <div class="table-responsive">
                        <table class="table table-bordered">
                            
                            <table class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th>No.</th>
                                        <th>Order ID</th>
                                        <th>Ordered Date</th>
                                        <th>Order Status</th>
                                        <th>Payment Method</th>
                                        <th>Payment Status</th>
                                        <th>Total Price</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% let orderNumber = 1; %>
                                    <% orders.forEach(order => { %>
                                        <tr>
                                            <td><%= orderNumber++ %></td>
                                            <td><%= order.OrderId %></td>
                                            <td><%= new Date(order.createdAt).toLocaleDateString('en-GB') %></td>
                                            <td>
                                                <% if (order.Status === 'Pending') { %>
                                                    <div class="dropdown">
                                                        <button class="btn btn-sm btn-warning dropdown-toggle" type="button" id="dropdownMenuButton<%= order._id %>" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                            <%= order.Status %>
                                                        </button>
                                                        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton<%= order._id %>">
                                                            <a class="dropdown-item" href="#" onclick="openChangeStatusModal('<%= order._id %>', 'Shipped')">Shipped</a>
                                                            <a class="dropdown-item" href="#" onclick="openChangeStatusModal('<%= order._id %>', 'Delivered')">Out For Delivery</a>
                                                            <a class="dropdown-item" href="#" onclick="openChangeStatusModal('<%= order._id %>', 'Placed')">Delivered</a>
                                                        </div>
                                                    </div>
                                                <% } else if (order.Status === 'Shipped') { %>
                                                    <div class="dropdown"></div>
                                                        <button class="btn btn-sm btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton<%= order._id %>" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                            <%= order.Status %>
                                                        </button>
                                                        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton<%= order._id %>">
                                                            <a class="dropdown-item" href="#" onclick="openChangeStatusModal('<%= order._id %>', 'Delivered')">Out For Delivery</a>
                                                            <a class="dropdown-item" href="#" onclick="openChangeStatusModal('<%= order._id %>', 'Placed')">Delivered</a>
                                                        </div>
                                                    </div>
                                                <% } else if (order.Status === 'Delivered') { %>
                                                    <div class="dropdown"></div>
                                                        <button class="btn btn-sm btn-info dropdown-toggle" type="button" id="dropdownMenuButton<%= order._id %>" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                            Out For Delivery
                                                        </button>
                                                        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton<%= order._id %>">
                                                            <a class="dropdown-item" href="#" onclick="openChangeStatusModal('<%= order._id %>', 'Placed')">Delivered</a>
                                                        </div>
                                                    </div>
                                                <% } else if (order.Status === 'Placed') { %>
                                                    <button class="btn btn-sm btn-success" disabled>Delivered</button>
                                                <% } else if (order.Status === 'Cancelled') { %>
                                                    <button class="btn btn-sm btn-danger" disabled>Cancelled</button>
                                                <% } else if (order.Status === 'Returned') { %>
                                                  <button class="btn btn-sm btn-danger" disabled>Returned</button>
                                              <% } %>
                                                
                                                <!-- Confirmation Modal for Status Change -->
                                                <div class="modal fade" id="changeStatusModal" tabindex="-1" aria-labelledby="changeStatusModalLabel" aria-hidden="true">
                                                    <div class="modal-dialog">
                                                        <div class="modal-content">
                                                            <div class="modal-header">
                                                                <h5 class="modal-title" id="changeStatusModalLabel">Confirm Status Change</h5>
                                                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                                            </div>
                                                            <div class="modal-body">
                                                                Are you sure you want to change the status to <span id="newStatus"></span>?
                                                            </div>
                                                            <div class="modal-footer">
                                                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                                                <form id="confirmChangeStatusForm" method="POST" style="display: inline;">
                                                                    <input type="hidden" name="status" id="statusInput">
                                                                    <button type="submit" class="btn btn-primary">Confirm</button>
                                                                </form>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                            </td>
                                            <td><%= order.PaymentMethod %></td>
                                            <td><%= order.PaymentStatus %></td>
                                            <td>₹ <%= order.TotalPrice.toFixed(2) %></td>
                                            <td>
                                              <% 
                                                // Initialize flags for return request and cancel conditions
                                                let canCancel = true; 
                                                let returnRequested = false; 
                                                let returnReasons = [];
                                                let reutrnProduct = []
                                                let returnComments = [];
                                          
                                                // Iterate through products to determine status
                                                order.Products.forEach(item => {
                                                    if (item.ProductStatus === 'Return Requested') {
                                                        returnRequested = true;
                                                    }
                                                    if (item.ProductStatus === 'Returned') {
                                                        canCancel = false; // If any product is Returned, cancel is not allowed
                                                    }
                                                    // Collect return reasons and comments for the modal
                                                    if (item.ReturnRequested) {
                                                        reutrnProduct.push(item.ProductId.Name);
                                                        returnReasons.push(item.ReturnReason);
                                                        returnComments.push(item.ReturnComments || 'No additional comments provided');
                                                    }
                                                }); 
                                              %>

                                              <button class="btn btn-primary btn-sm" data-toggle="modal" data-target="#orderModal<%= order._id %>">View</button>
                                          
                                              <% if (order.Status !== 'Cancelled' && order.Status !== 'Placed' && canCancel) { %>
                                                  <form action="/admin/orders/cancel-order/<%= order._id %>" method="POST" class="cancel-order-form" style="display:inline;">
                                                      <button type="button" class="btn btn-danger btn-sm" onclick="openCancelModal('<%= order._id %>',<%= JSON.stringify(order.Products) %>)">Cancel</button>
                                                  </form>
                                              <% } else if (order.Status === 'Placed' && returnRequested) { %>
                                                  <button class="btn btn-warning btn-sm" data-toggle="modal" data-target="#returnRequestModal<%= order._id %>">
                                                      Return Request
                                                  </button>
                                              <% } else if (order.Status === 'Placed' && order.ReturnRequest && order.ReturnRequest.status === 'Rejected') { %>
                                                  <button class="btn btn-secondary btn-sm" disabled>Return Rejected</button>
                                              <% } else { %>
                                                  <button class="btn btn-secondary btn-sm" disabled>No Action</button>
                                              <% } %>
                                          </td>
                                          </tr>
                                          
                                          <div class="modal fade" id="returnRequestModal<%= order._id %>" tabindex="-1" role="dialog" aria-labelledby="returnRequestModalLabel<%= order._id %>" aria-hidden="true">
                                            <div class="modal-dialog" role="document">
                                                <div class="modal-content">
                                                    <div class="modal-header">
                                                        <h5 class="modal-title" id="returnRequestModalLabel<%= order._id %>">Return Request for Order <%= order.OrderId %></h5>
                                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                            <span aria-hidden="true">&times;</span>
                                                        </button>
                                                    </div>
                                                    <div class="modal-body">
                                                        <h6>Return Requested Products:</h6>
                                                        <form id="returnRequestForm<%= order._id %>" method="POST" action="/admin/orders/handle-return-request/<%= order._id %>">
                                                          <% order.Products.forEach((product, index) => { %>
                                                              <% if (product.ProductStatus === 'Return Requested') { %>
                                                                  <div>
                                                                    <input type="checkbox" id="product_<%= product._id %>" name="products[]" value="<%= product._id %>" 
                                                                    onclick="toggleProductSelection('<%= product._id %>', '<%= order._id %>')">
                                                                      <label for="product_<%= product._id %>">
                                                                          <% if (product.ProductId.Images && product.ProductId.Images.length > 0) { %>
                                                                              <img src="/static/uploads/<%= product.ProductId.Images[0] %>" alt="<%= product.ProductId.Name %>" style="width: 50px; height: 50px;">
                                                                          <% } else { %>
                                                                              <img src="/path/to/default/image.jpg" alt="No image available" style="width: 50px; height: 50px;">
                                                                          <% } %>
                                                                          <strong><%= product.ProductId.Name %></strong>
                                                                          <br>Reason: <%= product.ReturnReason %>
                                                                          <br>Comments: <%= product.ReturnComment || "No comments" %>
                                                                      </label>
                                                                      <hr/>
                                                                  </div>
                                                              <% } %>
                                                          <% }) %>
                                                      </form>
                                                    </div>
                                                    <div class="modal-footer">
                                                        <button type="button" class="btn btn-danger" onclick="submitReturnRequest('<%= order._id %>', 'reject')">Reject</button>
                                                        <button type="button" class="btn btn-success" onclick="submitReturnRequest('<%= order._id %>', 'accept')">Accept</button>
                                                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                                    </div>
                                                </div>
                                            </div>
                                          </div>
                                        
                                        <!-- Confirmation Modal -->
                                        <div class="modal fade" id="cancelOrderModal" tabindex="-1" aria-labelledby="cancelOrderModalLabel" aria-hidden="true">
                                          <div class="modal-dialog">
                                              <div class="modal-content">
                                                  <div class="modal-header">
                                                      <h5 class="modal-title" id="cancelOrderModalLabel">Confirm Product Cancellation</h5>
                                                      <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                                  </div>
                                                  <div class="modal-body">
                                                      <p>Select the product(s) you want to cancel:</p>
                                                      <div id="cancelProductCheckboxes">
                                                          <!-- Checkboxes will be populated here -->
                                                      </div>
                                                  </div>
                                                  <div class="modal-footer">
                                                      <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                                      <form id="confirmCancelForm" method="POST" style="display: inline;" action="/admin/orders/cancel-order/<%= order._id %>">
                                                          <input type="hidden" name="orderId" id="orderIdInput">
                                                          <input type="hidden" name="selectedProducts" id="cancelProductIds" value="">
                                                          <button type="submit" class="btn btn-danger">Cancel Selected Product(s)</button>
                                                      </form>
                                                  </div>
                                              </div>
                                          </div>
                                        </div>
                                        
                            
                                        <!-- Order Details Modal -->
                                        <div class="modal fade" id="orderModal<%= order._id %>" tabindex="-1" role="dialog" aria-labelledby="orderModalLabel<%= order._id %>" aria-hidden="true">
                                          <div class="modal-dialog" role="document">
                                              <div class="modal-content">
                                                  <div class="modal-header">
                                                      <h5 class="modal-title" id="orderModalLabel<%= order._id %>">Order Details for <%= order.OrderId %></h5>
                                                      <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                          <span aria-hidden="true">&times;</span>
                                                      </button>
                                                  </div>
                                                  <div class="modal-body">
                                                      <h6>Shipping Address:</h6>
                                                      <p>
                                                          <%= order.Address.FullName %><br>
                                                          <%= order.Address.Address %><br>
                                                          <%= order.Address.City %>, <%= order.Address.State %> <%= order.Address.Pincode %><br>
                                                          <%= order.Address.MobileNo %>
                                                      </p>
                                                      <h6>Ordered Products:</h6>
                                                      <ul>
                                                          <% order.Products.forEach(product => { %>
                                                              <li>
                                                                  <% if (product.ProductId.Images && product.ProductId.Images.length > 0) { %>
                                                                      <img src="/static/uploads/<%= product.ProductId.Images[0] %>" alt="<%= product.ProductId.Name %>" style="width: 50px; height: 50px;"> 
                                                                  <% } else { %>
                                                                      <img src="/path/to/default/image.jpg" alt="No image available" style="width: 50px; height: 50px;"> 
                                                                  <% } %>
                                                                  <%= product.ProductId.Name %> - Quantity: <%= product.Quantity %> 
                                                                  <br>Price: ₹ <%= product.Price %> 
                                                                  <% if (product.ProductStatus === 'Cancelled') { %> 
                                                                      <span style="color: red;">&#9673;(Cancelled)</span>
                                                                  <% } else if (product.ProductStatus === 'Return Requested') { %> 
                                                                    <span style="color: rgb(252, 154, 7)">&#9673;(Return Requested)</span>
                                                                <% } else if (product.ProductStatus === 'Returned') { %> 
                                                                  <span style="color: red;">&#9673;(Returned)</span>
                                                                <% } else if (product.ProductStatus === 'Return Rejected') { %> 
                                                                  <span style="color: rgb(255, 0, 234);">&#9673;(Return Rejected)</span>
                                                                <% } %>%>
                                                              </li>
                                                          <% }) %>
                                                      </ul>
                                                      <h6>Shipping Charge: ₹ 50 %></h6>
                                                      <h6>Total Price: ₹ <%= order.TotalPrice.toFixed(2) %></h6>
                                                  </div>
                                                  <div class="modal-footer">
                                                      <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                                  </div>
                                              </div>
                                          </div>
                                        </div>
                                        </div>
                                    <% }) %>
                                </tbody>
                            </table>
                    </div>

                    <div class="pagination">
                      <% if (totalPages > 1) { %>
                          <nav aria-label="Page navigation example">
                              <ul class="pagination justify-content-center">
                                  <li class="page-item <%= currentPage === 1 ? 'disabled' : '' %>">
                                      <a class="page-link" href="?page=<%= currentPage - 1 %>&filter=<%= filterOption %>" aria-label="Previous">
                                          <span aria-hidden="true">&laquo;</span>
                                      </a>
                                  </li>
                                  <% for (let i = 1; i <= totalPages; i++) { %>
                                      <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                                          <a class="page-link" href="?page=<%= i %>&filter=<%= filterOption %>"><%= i %></a>
                                      </li>
                                  <% } %>
                                  <li class="page-item <%= currentPage === totalPages ? 'disabled' : '' %>">
                                      <a class="page-link" href="?page=<%= currentPage + 1 %>&filter=<%= filterOption %>" aria-label="Next">
                                          <span aria-hidden="true">&raquo;</span>
                                      </a>
                                  </li>
                              </ul>
                          </nav>
                      <% } %>
                  </div>
                  <style>
                    .pagination {
                      text-align: center;
                      display: flex;
                      justify-content: center;
                      margin-top: 20px; /* Adjust as needed */
                    }
                  
                    .pagination .page-item .page-link {
                      color: #fff;
                      background-color: #191C24;
                      border-color: #191C24;
                    }
                  
                    .pagination .page-item.active .page-link {
                      background-color: #007bff;
                      border-color: #007bff;
                    }
                  
                    .pagination .page-item.disabled .page-link {
                      color: #6c757d;
                    }
                  </style>                                   
                </div>
              </div>
            </div>
          </div>
          </div>
        </div>
        <!-- main-panel ends -->
      </div>
      <!-- page-body-wrapper ends -->
    </div>
    <!-- container-scroller -->

    <!-- plugins:js -->
    <script src="/static/admin/vendors/js/vendor.bundle.base.js"></script>
    <!-- endinject -->
    <!-- Plugin js for this page -->
    <script src="/static/admin/vendors/chart.js/Chart.min.js"></script>
    <script src="/static/admin/vendors/progressbar.js/progressbar.min.js"></script>
    <script src="/static/admin/vendors/jvectormap/jquery-jvectormap.min.js"></script>
    <script src="/static/admin/vendors/jvectormap/jquery-jvectormap-world-mill-en.js"></script>
    <script src="/static/admin/vendors/owl-carousel-2/owl.carousel.min.js"></script>
    <!-- End plugin js for this page -->
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>

    <!-- inject:js -->
    <script src="/static/admin/js/off-canvas.js"></script>
    <script src="/static/admin/js/hoverable-collapse.js"></script>
    <script src="/static/admin/js/misc.js"></script>
    <script src="/static/admin/js/settings.js"></script>
    <script src="/static/admin/js/todolist.js"></script>

    <script src="https://unpkg.com/cropperjs/dist/cropper.min.js"></script>
    <!-- endinject -->
    <!-- Custom js for this page -->
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js"></script>
    <script src="/static/admin/js/dashboard.js"></script>
    <!-- End custom js for this page -->
    <script>
      // Initialize a global object to track selected products for each order
const selectedProductIds = {};

// Function to handle the selection/deselection of products
function toggleProductSelection(productId, orderId) {
    // Check if the selectedProductIds object for this orderId exists
    if (!selectedProductIds[orderId]) {
        selectedProductIds[orderId] = [];
    }

    const index = selectedProductIds[orderId].indexOf(productId);
    
    if (index > -1) {
        // If the product is already selected, remove it (deselect)
        selectedProductIds[orderId].splice(index, 1);
    } else {
        // If the product is not selected, add it (select)
        selectedProductIds[orderId].push(productId);
    }

    console.log("Currently selected products for order", orderId, selectedProductIds[orderId]);
}

function submitReturnRequest(orderId, action) {
    const form = document.getElementById(`returnRequestForm${orderId}`);

    // Use the globally tracked selected product IDs
    const selectedProducts = selectedProductIds[orderId] || [];

    if (selectedProducts.length === 0) {
        Swal.fire({
            icon: 'warning',
            title: 'No products selected',
            text: 'Please select at least one product before submitting the return request.',
            customClass: {
                popup: 'swal-dark-popup',
                title: 'swal-dark-title',
                content: 'swal-dark-content',
                confirmButton: 'swal-dark-button',
                cancelButton: 'swal-dark-cancel-button'
            },
            background: '#2c2c2c', // Dark background color
            color: '#fff', // Text color
        });
        return;
    }

    // Log the selected products for debugging
    console.log("Selected products: ", selectedProducts);

    // Ask for confirmation to accept/reject the request with dark background
    Swal.fire({
        title: action === 'accept' ? 'Accept Return Request?' : 'Reject Return Request?',
        text: `Are you sure you want to ${action} the return request?`,
        icon: 'question',
        showCancelButton: true,
        confirmButtonText: `Yes, ${action}!`,
        cancelButtonText: 'Cancel',
        customClass: {
            popup: 'swal-dark-popup',
            title: 'swal-dark-title',
            content: 'swal-dark-content',
            confirmButton: 'swal-dark-button',
            cancelButton: 'swal-dark-cancel-button'
        },
        background: '#2c2c2c', // Dark background color
        color: '#fff', // Text color
    }).then((result) => {
        if (result.isConfirmed) {
            // Create hidden input to store action (accept/reject)
            const actionInput = document.createElement('input');
            actionInput.type = 'hidden';
            actionInput.name = 'action';
            actionInput.value = action;

            // Append the action input to the form
            form.appendChild(actionInput);

            // Create hidden inputs for selected products
            selectedProducts.forEach(productId => {
                const productInput = document.createElement('input');
                productInput.type = 'hidden';
                productInput.name = 'products[]';
                productInput.value = productId;
                form.appendChild(productInput);
            });

            // Submit the form
            form.submit();
        }
    });
}
    </script>


    <script>
      function openCancelModal(orderId, products) {
          const form = document.getElementById('confirmCancelForm');
          const cancelProductCheckboxes = document.getElementById('cancelProductCheckboxes');
          const orderIdInput = document.getElementById('orderIdInput');
          const cancelProductIds = document.getElementById('cancelProductIds');
  
          // Clear previous checkboxes
          cancelProductCheckboxes.innerHTML = '';
  
          // Set the order ID
          orderIdInput.value = orderId;
  
          // Populate the checkboxes with cancelable products
          products.forEach(product => {
              if (product.ProductStatus !== 'Cancelled') {
                  const checkboxDiv = document.createElement('div');
                  const checkbox = document.createElement('input');
                  checkbox.type = 'checkbox';
                  checkbox.id = `product-${product.ProductId._id}`; // Unique ID for each checkbox
                  checkbox.value = product.ProductId._id; // Product ID for submission
                  checkbox.name = 'cancelProducts'; // Name for form submission
  
                  const label = document.createElement('label');
                  label.htmlFor = checkbox.id;
                  label.textContent = `${product.ProductId.Name} - Quantity: ${product.Quantity} - Price: ${product.Price}`;
  
                  checkboxDiv.appendChild(checkbox);
                  checkboxDiv.appendChild(label);
                  cancelProductCheckboxes.appendChild(checkboxDiv);
              }
          });
  
          // Show the modal
          const cancelModal = new bootstrap.Modal(document.getElementById('cancelOrderModal'));
          cancelModal.show();
      }
  
      document.getElementById('confirmCancelForm').addEventListener('submit', function (e) {
        const selectedCheckboxes = document.querySelectorAll('input[name="cancelProducts"]:checked');
        const selectedProductIds = Array.from(selectedCheckboxes).map(checkbox => checkbox.value);
        
        // Set the product IDs to the hidden input
        document.getElementById('cancelProductIds').value = selectedProductIds.join(',');

        // If no product is selected, prevent submission
        if (selectedProductIds.length === 0) {
            e.preventDefault();
            Swal.fire({
                icon: 'warning',
                title: 'No Products Selected',
                text: 'Please select at least one product to cancel.',
                confirmButtonText: 'OK',
                background: '#191C24', // Set dark background color
                color: '#ffffff', // Set text color to white
                confirmButtonColor: '#4F2F2D' // Optional: Change the button color
            });
        }
      });
  </script>
    <script>
        function openChangeStatusModal(orderId, status) {
            document.getElementById('newStatus').textContent = status;
            document.getElementById('statusInput').value = status; // Set the status input value
            const form = document.getElementById('confirmChangeStatusForm');
            form.action = `/admin/orders/change-status/${orderId}`;
            const changeStatusModal = new bootstrap.Modal(document.getElementById('changeStatusModal'));
            changeStatusModal.show();
        }
    </script>
    <script>
      // Function to extract query parameters
      function getQueryParam(param) {
          const urlParams = new URLSearchParams(window.location.search);
          return urlParams.get(param);
      }
  
      // Check for success or error messages in the URL query string
      const successMessage = getQueryParam('success');
      const errorMessage = getQueryParam('error');
  
      // If success message is present, show the success Swal alert
      if (successMessage) {
          Swal.fire({
              title: 'Success',
              text: successMessage,
              icon: 'success',
              background: '#191C24', // Set dark background color
              color: '#ffffff',
              confirmButtonText: 'OK'
          }).then(() => {
              // Clear the query parameters from the URL after showing the alert
              const url = new URL(window.location);
              url.searchParams.delete('success');
              history.replaceState(null, null, url.toString());
          });
      }
  
      // If error message is present, show the error Swal alert
      if (errorMessage) {
          Swal.fire({
              title: 'Error',
              text: errorMessage,
              icon: 'error',
              background: '#191C24', // Set dark background color
              color: '#ffffff',
              confirmButtonText: 'OK'
          }).then(() => {
              // Clear the query parameters from the URL after showing the alert
              const url = new URL(window.location);
              url.searchParams.delete('error');
              history.replaceState(null, null, url.toString());
          });
      }
  </script>
  </body>
</html>