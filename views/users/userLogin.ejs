<%- include('../userLayouts/header') %>
<style>
/* Unified body styles */
.selected-7{
        color: blue;
    }
body {
    background-color: white; /* Match account overview background */
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
}

/* Account Overview Styles */
.account-container {
    width: 80%;
    margin: 0 auto;
}

.account-breadcrumbs {
    margin: 20px 0;
    font-size: 14px;
}

.account-breadcrumbs a {
    color: #4F2F2D;
    text-decoration: none;
}

.account-breadcrumbs span {
    margin: 0 5px;
    color: #999;
}

.account-overview-container {
    display: flex;
    margin-top: 20px;
}

.account-sidebar {
    width: 25%;
    border-right: 1px solid #ddd;
    padding-right: 20px;
}

.account-sidebar a {
    display: block;
    padding: 10px 20px;
    color: #333;
    text-decoration: none;
    margin-bottom: 10px;
    border-radius: 5px;
    transition: background-color 0.3s, box-shadow 0.3s;
}

.account-sidebar a:hover {
    background-color: #f0f0f0;
    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
}

.account-sidebar a.account-selected {
    background-color: #e0e0e0;
    font-weight: bold;
}

.account-main-content {
    width: 75%;
    padding-left: 20px;
}

.account-button {
    display: inline-block;
    padding: 10px 20px;
    color: white;
    background-color: #4F2F2D;
    text-decoration: none;
    border-radius: 5px;
    margin: 10px 0;
}

/* Registration Section */
.registration-section {
    padding: 20px;
    background-color: #f9f9f9;
    border-radius: 8px;
    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);
    margin-top: 20px;
}

.registration-section h2 {
    margin-bottom: 15px;
    font-size: 24px;
}

.registration-section p {
    margin-bottom: 20px;
    font-size: 16px;
}

.registration-section .btn-register {
    display: inline-block;
    background-color: #4F2F2D;
    color: white;
    padding: 10px 20px;
    border-radius: 5px;
    text-decoration: none;
    margin-right: 10px;
}

.registration-section .btn-register:hover {
    background-color: #3c3b36;
}

.registration-section .btn-link {
    color: #357AE8;
    text-decoration: none;
}

.registration-section .btn-link:hover {
    text-decoration: underline;
}

/* Form Control */
.form-control {
    border-radius: 5px;
}

.form-label {
    display: block;
    margin-bottom: 5px;
    font-size: 14px;
    color: #333;
}

.btn-primary {
    background-color: #4F2F2D;
    border: none;
}

.btn-primary:hover {
    background-color: #3c3b36;
}

.btn-link {
    color: #357AE8;
    text-decoration: none;
}
.btn-link:hover {
    text-decoration: underline;
}

/* Login Page Styles */
.login-container {
    background-color: #f9f9f9; /* Adjusted to match registration section */
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    width: 400px;
    margin: 20px auto;
}

.login-container h1 {
    margin-bottom: 20px;
    font-size: 24px;
    text-align: center;
}

.login-container .form-outline {
    margin-bottom: 15px;
}

.login-container .form-outline input {
    border-radius: 5px;
    width: 100%;
    padding: 10px;
    border: 1px solid #ddd;
}

.login-container .form-outline label {
    font-size: 14px;
    color: #333;
}

.login-container .btn-primary {
    background-color: #4F2F2D;
    color: white;
    border: none;
    border-radius: 5px;
    padding: 10px;
    width: 100%;
    font-size: 16px;
    cursor: pointer;
    transition: background-color 0.3s;
}

.login-container .btn-primary:hover {
    background-color: #3c3b36;
}

.login-container .divider {
    margin: 20px 0;
    text-align: center;
}

.login-container .divider p {
    margin: 0;
    font-weight: bold;
}

.login-container .btn-google {
    background-color: #4285F4;
    color: white;
    border: none;
    border-radius: 5px;
    padding: 10px;
    width: 100%;
    font-size: 16px;
    cursor: pointer;
    transition: background-color 0.3s;
}

.login-container .btn-google:hover {
    background-color: #357AE8;
}

.login-container .btn-google i {
    margin-right: 8px;
}

.login-container .text-center {
    text-align: center;
}

.login-container .text-center a {
    color: #357AE8;
    text-decoration: none;
}

.login-container .text-center a:hover {
    text-decoration: underline;
}
</style>
<div class="account-container">
    <!-- Breadcrumbs -->
    <div class="account-breadcrumbs">
        <a href="/">Home</a> <span>&gt;</span><a href="/myAccount">My Account</a><span>&gt;</span><span>Login</span>
    </div>

    <div class="account-overview-container">
        <!-- Sidebar -->
        <div class="account-sidebar">
            <a href="/myaccount" class="account-selected">Account Overview</a>
        </div>

       <!-- Main Content -->
<div class="account-main-content">
    <div class="login-container">
        <h1>Login</h1>
        <div class="text-center mb-4">
            <button type="button" class="btn-google btn-lg mt-3" onclick="openGoogleAuthWindow();">
                <i class="fab fa-google"></i> Sign in with Google
            </button>
            <script>
            function openGoogleAuthWindow() {
                // Open a smaller window (popup)
                window.open('/auth/google', 'GoogleAuth', 'width=500,height=600');
            }
            </script>
        </div>

        <div class="divider d-flex align-items-center my-4">
            <p class="text-center fw-bold mx-3 mb-0">Or</p>
        </div>
        <% if (typeof message !== 'undefined') { %>
            <p style="color: red;"><%= message %></p>
        <% } %>
        <form action="/login" id="loginForm" method="post" onsubmit="return validateForm()">
            <!-- Email input -->
            <div class="form-outline mb-4">
                <label class="form-label" for="email">Email address</label>
                <input type="email" id="email" name="email" class="form-control" placeholder="Enter a valid email address" required />
                <p class="validation-message" id="email-error"></p>
            </div>
        
            <!-- Password input -->
            <div class="form-outline mb-3 position-relative">
                <label class="form-label" for="password">Password</label>
                <input type="password" id="password" name="password" class="form-control" placeholder="Enter password" required />
                <span class="position-absolute end-0 top-50 translate-middle-y me-2" id="togglePassword" style="cursor: pointer;">
                    <i class="fas fa-eye"></i>
                </span>
                <p class="validation-message" id=" passwordError"></p>
            </div>
        
            <div class="text-center text-lg-start">
                <button type="submit" class="btn-primary btn-lg" onclick="validateForm()">Login</button>
        
                <!-- Forgot Password link -->
                <div class="text-center mb-4">
                    <a href="#" class="text-center btn-link" data-toggle="modal" data-target="#forgotPasswordModal">Forgot Password?</a>
                </div>
                <p class="validation-message" id="submitError"></p>
                <p class="small fw-bold mt-2 mb-0">Don't have an account? <a href="/register" class="link-danger">Register</a></p>
            </div>
        </form>
    </div>
</div>
</div>
</div>
<!-- Forgot Password Modal -->
<div id="forgotPasswordModal" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header" style="display: flex; justify-content: space-between; align-items: center; padding: 1rem;">
                <h5 class="modal-title">Reset Password</h5>
                <button type="button" style="background: none; border: none; font-size: 1.5rem; color: #000; cursor: pointer;" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="forgotPasswordForm">
                    <div class="form-group">
                        <label for="forgotEmail">Enter your email address:</label>
                        <input type="email" class="form-control" id="forgotEmail" name="forgotEmail" required>
                        <p id="forgotEmailError" class="text-danger" style="display: none;">Please enter a valid email.</p>
                    </div>
                    <div class="form-group text-center">
                        <button type="submit" class="btn btn-primary" style="background-color: #4F2F2D;">Send Confirmation</button>
                    </div>
                </form>
                <p id="forgotEmailSentMessage" class="text-success text-center" style="display: none;">
                    An email has been sent to your account!
                    <button id="okButton" class="btn btn-success" style="margin-left: 1rem;">OK</button>
                </p>
            </div>
        </div>
    </div>
</div>
<br><br>
<%- include('../userLayouts/footer') %>
<!-- jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- Bootstrap JS and Popper.js -->
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script>
    $(document).ready(function() {
        // Forgot Password Form Submission
        $('#forgotPasswordForm').on('submit', function(e) {
            e.preventDefault();
            
            const email = $('#forgotEmail').val();
            const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;

            // Validate email
            if (!emailRegex.test(email)) {
                $('#forgotEmailError').show();
            } else {
                $('#forgotEmailError').hide();

                // Simulate sending the request to the server
                $.ajax({
                    url: '/forgot-password', // Backend route to handle password reset
                    method: 'POST',
                    data: { email: email },
                    success: function(response) {
                        if (response.success) {
                            $('#forgotEmailSentMessage').show();
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function() {
                        alert('An error occurred while sending the reset email.');
                    }
                });
            }
        });

        // Handle "OK" button click
        $('#okButton').on('click', function() {
            $('#forgotPasswordModal').modal('hide'); // Close the modal
            location.reload(); // Refresh the page
        });
    });
</script>

<script>
    document.addEventListener('DOMContentLoaded', function() {
    // Error message elements
    const emailError = document.getElementById('email-error');
    const passwordError = document.getElementById(' passwordError');
    const togglePassword = document.getElementById('togglePassword');

    // Input elements
    const emailInput = document.getElementById('email');
    const passwordInput = document.getElementById('password');

    // Validate email
    function validateEmail() {
        const email = emailInput.value.trim();
        const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;

        if (email.length === 0) {
            emailError.textContent = 'Email is required';
            emailError.style.color = 'red';
            return false;
        } else if (!emailRegex.test(email)) {
            emailError.textContent = 'Invalid Email';
            emailError.style.color = 'red';
            return false;
        } else {
            emailError.textContent = '';
            return true;
        }
    }

    // Validate password
    function validatePassword() {
        const password = passwordInput.value.trim();
        const passwordRegex = /^(?!.*\s)(?=.*[A-Za-z])(?=.*\d|.*[\W_]).{8,}$/;

        if (!password.match(passwordRegex)) {
             passwordError.textContent = 'at least 8 characters,no spaces,include at least 1 letter and 1 digit or special character';
             passwordError.style.color = 'red';
            return false;
        }
         passwordError.textContent = '';
        return true;
    }

    // Validate form
    function validateForm() {
        const isEmailValid = validateEmail();
        const isPasswordValid = validatePassword();

        return isEmailValid && isPasswordValid;
    }

    // Toggle password visibility
    togglePassword.addEventListener('click', function() {
        const type = passwordInput.type === 'password' ? 'text' : 'password';
        passwordInput.type = type;
        this.querySelector('i').classList.toggle('fa-eye', type === 'password');
        this.querySelector('i').classList.toggle('fa-eye-slash', type === 'text');
    });

    // Attach validation to inputs
    emailInput.addEventListener('input', validateEmail);
    passwordInput.addEventListener('input', validatePassword);

    // Prevent form submission if validation fails
    const form = document.getElementById('loginForm');
    form.addEventListener('submit', function(event) {
        if (!validateForm()) {
            event.preventDefault(); // Prevent form submission if validation fails
            submitError.textContent = 'Form is incomplete!';
            submitError.style.color = 'red';
        }
    });
});
</script>
<script>
    document.getElementById('search-input').addEventListener('input', function () {
    const query = this.value.trim();
    
    if (query.length > 0) {
        fetch(`/search?query=${encodeURIComponent(query)}`)
            .then(response => response.json())
            .then(data => {
                const searchResults = document.getElementById('search-results');
                searchResults.innerHTML = '';  // Clear previous results
                
                if (data.length > 0) {
                    searchResults.style.display = 'block';
                    data.forEach(product => {
                        const resultItem = document.createElement('a');
                        resultItem.href = `/home/product/${product._id}`;
                        resultItem.classList.add('search-result-item');

                        // Check if the product is sold out
                        let productContent = '';
                        if (product.Quantity === 0) {
                            // Sold out: show a faded style and "Sold Out" text
                            resultItem.classList.add('sold-out'); // Apply the "sold-out" class
                            productContent = `
                                <img src="/static/uploads/${product.Images[0]}" alt="image">
                                <div class="details">
                                    <span class="name">${product.Name}</span>
                                    <span >${product.Author}</span>
                                    <span class="sold-out-text">Sold Out</span>
                                </div>
                            `;
                        } else {
                            // Available: show the product price
                            productContent = `
                                <img src="/static/uploads/${product.Images[0]}" alt="image">
                                <div class="details">
                                    <span class="name">${product.Name}</span>
                                    <span >${product.Author}</span>
                                    <span class="price">$${product.Price}</span>
                                </div>
                            `;
                        }

                        resultItem.innerHTML = productContent;
                        searchResults.appendChild(resultItem);
                    });
                } else {
                    searchResults.style.display = 'block';
                    searchResults.innerHTML = '<div class="no-results">No results found</div>';
                }
            })
            .catch(error => console.error('Error fetching search results:', error));
    } else {
        document.getElementById('search-results').style.display = 'none';
    }
});

// Hide search results when clicking outside
document.addEventListener('click', function (e) {
    const searchBar = document.querySelector('.search-bar');
    if (!searchBar.contains(e.target)) {
        document.getElementById('search-results').style.display = 'none';
    }
});
</script>
</body>
</html>

